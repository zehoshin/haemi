positions = [
(0.530746379261164, -0.4579235545180609, 0), 
(0.4401539363935153, -0.6093854166965076, 0), 
(0.3510642602618465, -0.7232879324802652, 0), 
(0.24970690012207952, -0.8139319408731684, 0), 
(0.16407988993625125, -0.8756108570804171, 0), 
(0.12503414681359848, -0.9209164912688514, 0), 
(0.09441240981660257, -0.9601030164604525, 0), 
(0.06709004793547597, -0.9892228052218688, 0), 
(0.04548654835516189, -0.999485163247859, 0), 
(0.032756411620577575, -0.9999672599839655, 0), 
(0.030883682703408473, -0.9998232039134141, 0), 
(0.01286112237685968, -0.9952048154015585, 0), 
(-0.017696771588869047, -0.9750426950271596, 0), 
(-0.05953114557725369, -0.9315766404896595, 0), 
(-0.14215712404332662, -0.8687452757179985, 0), 
(-0.25805023280197664, -0.7733932530193455, 0), 
(-0.3480132488613638, -0.6879090711534674, 0), 
(-0.4236754259169149, -0.5801551303809749, 0), 
(-0.5092938418485341, -0.41986001187644084, 0), 
(-0.5908999688151347, -0.24929598734270986, 0), 
(-0.6343361480880036, -0.11970772987686074, 0), 
(-0.6557943638471647, 0.013540042881235892, 0), 
(-0.658211395530906, 0.13736442052422482, 0), 
(-0.6464749182829662, 0.2527615180399534, 0), 
(-0.6246119540755795, 0.3627565129100023, 0), 
(-0.5808700649029892, 0.5327729606755576, 0), 
(-0.5252603291681212, 0.694073606922549, 0), 
(-0.4705566733770057, 0.7844761576971983, 0), 
(-0.4270574695732706, 0.8296659740789107, 0), 
(-0.4109100936650933, 0.8444055292976079, 0), 
(-0.35161465062515, 0.9062186795705983, 0), 
(-0.2828814887130839, 0.9681304591418923, 0), 
(-0.23487398470140908, 0.9909641648246997, 0), 
(-0.18157855884997412, 0.9957998651929839, 0), 
(-0.13545933526308443, 0.9881968149693902, 0), 
(-0.09776739180345512, 0.9707815819402797, 0), 
(-0.06720622383612318, 0.945184618904167, 0), 
(-0.036786656438139956, 0.9086119747427146, 0), 
(-0.01320729689014862, 0.8883393568142, 0), 
(0.0042202136449747945, 0.8845087749381725, 0), 
(0.016281635552056056, 0.8940557636138102, 0), 
(0.03617446929457138, 0.9327217225504636, 0), 
(0.07340641552891716, 0.971669245625013, 0), 
(0.13551054269441326, 0.9948614544833974, 0), 
(0.20291159520407878, 1, 0), 
(0.2694188452760045, 0.9849641476361913, 0), 
(0.33296967190002186, 0.9490860010648691, 0), 
(0.39572205138299993, 0.8889286771028196, 0), 
(0.454660628248168, 0.8096192622610336, 0), 
(0.5073203350695092, 0.7212031096467229, 0), 
(0.5564329169348962, 0.6063615692780786, 0), 
(0.5992287219566421, 0.46852917114966164, 0), 
(0.6325573420918335, 0.315244303953398, 0), 
(0.6532683692975588, 0.1540453563812133, 0), 
(0.658211395530906, -0.007529282874966237, 0), 
(0.6442360127489625, -0.16194122512321507, 0), 
(0.6081918129088157, -0.30165208167160684, 0), 
(-0.6480198377895905, -0.05247774395097515, 0), 
(-0.6111414837284166, 0.41667358981589064, 0), 
(-0.4623708508679993, -0.5086378393553819, 0), 
(-0.4351311575273593, 0.8223354844888036, 0), 
(-0.40307213382645246, 0.852089611060887, 0), 
(-0.30731413492897264, -0.7294888915171844, 0), 
(-0.20820355838956767, 0.9954123052531765, 0), 
(-0.09065380481957609, -0.9048706094103809, 0), 
(-0.05419452296364259, 0.9298275051330206, 0), 
(-0.001810497308566056, 0.8845677069670345, 0), 
(0.02207661839014882, 0.903425956202862, 0), 
(0.030458062494960848, -0.9997904638973796, 0), 
(0.03318203182902505, -1, 0), 
(0.10211940959110599, 0.9849355001221611, 0), 
(0.11112946200377895, -0.9388154580348704, 0), 
(0.1901245726916344, -0.8550010169867481, 0), 
(0.36299185735338735, 0.9231223498491709, 0), 
(0.4813797553338605, 0.7676465617049036, 0), 
(0.5809094040785057, -0.3636388563421298, 0)
]

triangles = [
(0, 1, 59), (0, 18, 75), (0, 59, 18), (1, 2, 62), (1, 16, 17), (1, 17, 59), (1, 62, 16), (2, 3, 15), (2, 15, 62), (3, 72, 15), (4, 5, 64), (4, 14, 72), (4, 64, 14), (5, 13, 64), (5, 71, 13), (6, 7, 12), (6, 12, 71), (7, 8, 69), (7, 9, 10), (7, 10, 11), (7, 11, 12), (7, 69, 9), (10, 68, 11), (12, 13, 71), (14, 15, 72), (18, 19, 55), (18, 55, 56), (18, 56, 75), (19, 20, 54), (19, 54, 55), (20, 57, 54), (21, 22, 53), (21, 53, 57), (22, 23, 53), (23, 24, 52), (23, 52, 53), (24, 58, 52), (25, 26, 38), (25, 38, 66), (25, 66, 58), (26, 27, 60), (26, 60, 38), (28, 29, 38), (28, 38, 60), (29, 61, 38), (30, 31, 65), (30, 37, 61), (30, 65, 37), (31, 32, 63), (31, 33, 65), (31, 63, 33), (33, 34, 36), (33, 36, 65), (34, 35, 36), (37, 38, 61), (39, 40, 48), (39, 48, 74), (39, 49, 50), (39, 50, 51), (39, 51, 52), (39, 52, 58), (39, 58, 66), (39, 74, 49), (40, 45, 46), (40, 46, 73), (40, 47, 48), (40, 67, 45), (40, 73, 47), (41, 42, 70), (41, 70, 67), (43, 44, 67), (43, 67, 70), (44, 45, 67), (53, 54, 57)
]


def generate_glsl_function(positions, triangles):
    function_str = "bool inPath(vec2 p) {\n"
    function_str += "    vec3 a, b, c;\n"
    
    for triangle in triangles:
        a, b, c = positions[triangle[0]], positions[triangle[1]], positions[triangle[2]]
        function_str += f"    // Triangle {triangles.index(triangle)}\n"
        function_str += f"    a = vec3({a[0]}, {a[1]}, {a[2]});\n"
        function_str += f"    b = vec3({b[0]}, {b[1]}, {b[2]});\n"
        function_str += f"    c = vec3({c[0]}, {c[1]}, {c[2]});\n"
        function_str += "    if (pointInTriangle(vec3(p, 0.0), a, b, c)) return true;\n"
    
    function_str += "    return false;\n"
    function_str += "}\n"
    
    return function_str

# Generate the GLSL function
glsl_code = generate_glsl_function(positions, triangles)
print(glsl_code)